network:
  version: 2
  renderer: networkd
% if len(ethernets) > 0:
  ethernets:
% for interface, data in sorted(ethernets.items()):
    ${interface}:
      dhcp4: ${ 'true' if data.get('dhcp4') else 'false' }
      dhcp6: ${ 'true' if data.get('dhcp6') else 'false' }
% if data.get('optional', False):
      optional: true
% endif
% if len(data.get('match', {}).get('name','')) > 0:
      match:
        name: ${data.get('match', {}).get('name','')}
% endif
% if len(data.get('set-name', '')) > 0:
      set-name: ${data.get('set-name', '')}
% endif
% if len(data.get('addresses',[])) > 0:
      addresses:
% for address in sorted(data.get('addresses',[])):
      - ${address}
% endfor
% endif
% if len(data.get('routes',[])) > 0:
      routes:
% for route in sorted(data.get('routes',[])):
      - to: ${route.get('to','default')}
        via: ${route.get('via')}
        metric: ${route.get('metric',100)}
% endfor
% endif
% if len(data.get('nameservers',{}).get('addresses',[])) > 0 or len(data.get('nameservers',{}).get('search',[])) > 0:
      nameservers:
% if len(data.get('nameservers',{}).get('addresses',[])) > 0:
        addresses:
% for nameserver in sorted(data.get('nameservers',{}).get('addresses',[])):
        - ${nameserver}
% endfor
% endif
% if len(data.get('nameservers',{}).get('search',[])) > 0:
        search:
% for search in sorted(data.get('nameservers',{}).get('search',[])):
        - ${search}
% endfor
% endif
% endif
% endfor
% endif





% if len(bridges) > 0:
  bridges:
% for interface, data in sorted(bridges.items()):
    ${interface}:
      dhcp4: ${ 'true' if data.get('dhcp4') else 'false' }
      dhcp6: ${ 'true' if data.get('dhcp6') else 'false' }
% if data.get('macaddress',None) is not None:
      macaddress: ${data.get('macaddress')}
% endif
% if data.get('mtu',None) is not None:
      mtu: ${data.get('mtu')}
% endif
% if len(data.get('interfaces',[])) > 0:
      interfaces:
% for interface in sorted(data.get('interfaces',[])):
      - ${interface}
% endfor
% endif
% if len(data.get('addresses',[])) > 0:
      addresses:
% for address in sorted(data.get('addresses',[])):
      - ${address}
% endfor
% endif
% if len(data.get('routes',[])) > 0:
      routes:
% for route in sorted(data.get('routes',[])):
      - to: ${route['to']}
        via: ${route['via']}
% endfor
% endif

% if len(data.get('nameservers',{}).get('addresses',[])) > 0 or len(data.get('nameservers',{}).get('search',[])) > 0:
      nameservers:
% if len(data.get('nameservers',{}).get('addresses',[])) > 0:
        addresses:
% for nameserver in sorted(data.get('nameservers',{}).get('addresses',[])):
        - ${nameserver}
% endfor
% endif
% if len(data.get('nameservers',{}).get('search',[])) > 0:
        search:
% for search in sorted(data.get('nameservers',{}).get('search',[])):
        - ${search}
% endfor
% endif
% endif


% if len(data.get('parameters',{})) > 0:
      parameters:
% for k, v in sorted(data.get('parameters',{}).items()):
        ${k}: ${v}
% endfor
% endif

% endfor
% endif
